<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FinalizeOrderError" xml:space="preserve">
    <value>Failed to finalize order.</value>
  </data>
  <data name="FinalizeOrderSuccess" xml:space="preserve">
    <value>Your order has been finalized successfully!</value>
  </data>
  <data name="GetAll.Contains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="GetAll.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="GetAll.Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="GetAll.Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="GetAll.Header" xml:space="preserve">
    <value>Explore Our Categories</value>
  </data>
  <data name="GetAll.NoCategories" xml:space="preserve">
    <value>No categories found.</value>
  </data>
  <data name="GetAll.Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="GetAll.SubHeader" xml:space="preserve">
    <value>Discover a variety of products organized by category.</value>
  </data>
  <data name="GetAll.Title" xml:space="preserve">
    <value>All Categories</value>
  </data>
  <data name="GetAll.ViewProducts" xml:space="preserve">
    <value>View Products</value>
  </data>
  <data name="LoginRequiredError" xml:space="preserve">
    <value>You must be logged in to perform this action.</value>
  </data>
  <data name="newLayout.About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="newLayout.AllProducts" xml:space="preserve">
    <value>All Products</value>
  </data>
  <data name="newLayout.Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="newLayout.Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="newLayout.Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="newLayout.Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="newLayout.MyProfile" xml:space="preserve">
    <value>My Profile</value>
  </data>
  <data name="newLayout.NavbarBrand" xml:space="preserve">
    <value>My Shop</value>
  </data>
  <data name="newLayout.SearchButton" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="newLayout.SearchPlaceholder" xml:space="preserve">
    <value>Search products...</value>
  </data>
  <data name="newLayout.Shop" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="newLayout.SiteTitle" xml:space="preserve">
    <value>Shop</value>
  </data>
  <data name="newLayout.ViewOrder" xml:space="preserve">
    <value>View Order</value>
  </data>
  <data name="NotFoundError" xml:space="preserve">
    <value>Item not found.</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Product added to order!</value>
  </data>
  <data name="SuccessMessage" xml:space="preserve">
    <value>Operation completed successfully!</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>An error occurred.</value>
  </data>
  <data name="SignUp.Header" xml:space="preserve">
    <value>Sign Up</value>
  </data>
  <data name="SignUp.NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SignUp.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SignUp.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SignUp.PhoneLabel" xml:space="preserve">
    <value>PhoneNumber</value>
  </data>
  <data name="SignUp.LocationLabel" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="SignUp.SubmitButton" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Login.Header" xml:space="preserve">
    <value>Log In</value>
  </data>
  <data name="Login.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Login.PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Login.RememberMe" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="Category.Details.Title" xml:space="preserve">
    <value>Category Details</value>
  </data>
  <data name="Category.ProductsLabel" xml:space="preserve">
    <value>Products:</value>
  </data>
  <data name="Category.NoProducts" xml:space="preserve">
    <value>No products in this category.</value>
  </data>
  <data name="Category.BackButton" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Category.EditButton" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Category.DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Category.ProductCount" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="Category.DetailsButton" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Shop.Header.Title" xml:space="preserve">
    <value>Shop in style</value>
  </data>
  <data name="Shop.Header.Subtitle" xml:space="preserve">
    <value>Browse our amazing products</value>
  </data>
  <data name="Shop.SearchResults" xml:space="preserve">
    <value>Showing results for:</value>
  </data>
  <data name="Shop.NoProducts.Title" xml:space="preserve">
    <value>No products available at the moment.</value>
  </data>
  <data name="Shop.NoProducts.Message" xml:space="preserve">
    <value>Please check back later!</value>
  </data>
  <data name="Shop.LowStock" xml:space="preserve">
    <value>Low Stock</value>
  </data>
  <data name="Shop.OutOfStock" xml:space="preserve">
    <value>Out of Stock</value>
  </data>
  <data name="Shop.StockLabel" xml:space="preserve">
    <value>Stock:</value>
  </data>
  <data name="Shop.AddToOrder" xml:space="preserve">
    <value>Add to Order</value>
  </data>
  <data name="Shop.OutOfStockButton" xml:space="preserve">
    <value>Out of Stock</value>
  </data>
  <data name="Profile.Header" xml:space="preserve">
    <value>My Profile</value>
  </data>
  <data name="Profile.UsernameLabel" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Profile.EmailLabel" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Profile.BackButton" xml:space="preserve">
    <value>Back to Home</value>
  </data>
  <data name="Profile.ViewOrdersButton" xml:space="preserve">
    <value>View Orders</value>
  </data>
  <data name="Profile.EditButton" xml:space="preserve">
    <value>Edit Profile</value>
  </data>
  <data name="Order.Current.Title" xml:space="preserve">
    <value>My Current Order</value>
  </data>
  <data name="Order.NoActiveOrder" xml:space="preserve">
    <value>You don’t have any active orders.</value>
  </data>
  <data name="Order.TotalPriceLabel" xml:space="preserve">
    <value>Total Price:</value>
  </data>
  <data name="Order.ItemCountLabel" xml:space="preserve">
    <value>Number of Items:</value>
  </data>
  <data name="Order.ProductColumn" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Order.ImageColumn" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Order.QuantityColumn" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="Order.UnitPriceColumn" xml:space="preserve">
    <value>Unit Price</value>
  </data>
  <data name="Order.SubtotalColumn" xml:space="preserve">
    <value>Subtotal</value>
  </data>
  <data name="Order.BackButton" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Order.DeleteButton" xml:space="preserve">
    <value>Delete Order</value>
  </data>
  <data name="Order.DeleteConfirm" xml:space="preserve">
    <value>Are you sure you want to delete this order?</value>
  </data>
  <data name="Order.EditButton" xml:space="preserve">
    <value>Edit Order</value>
  </data>
  <data name="Order.CheckoutButton" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="Payment.Title" xml:space="preserve">
    <value>Material Design for Bootstrap</value>
  </data>
  <data name="Payment.CardNumberLabel" xml:space="preserve">
    <value>Card Number</value>
  </data>
  <data name="Payment.CardNumberPlaceholder" xml:space="preserve">
    <value>1234 5678 9012 3457</value>
  </data>
  <data name="Payment.CardholderLabel" xml:space="preserve">
    <value>Cardholder's Name</value>
  </data>
  <data name="Payment.CardholderPlaceholder" xml:space="preserve">
    <value>Cardholder's Name</value>
  </data>
  <data name="Payment.ExpirationLabel" xml:space="preserve">
    <value>Expiration</value>
  </data>
  <data name="Payment.ExpirationPlaceholder" xml:space="preserve">
    <value>MM/YYYY</value>
  </data>
  <data name="Payment.CVVLabel" xml:space="preserve">
    <value>CVV</value>
  </data>
  <data name="Payment.CardNumberValidation" xml:space="preserve">
    <value>Please enter a 16-digit card number in the format: 1234 5678 9012 3456</value>
  </data>
  <data name="Payment.CardholderValidation" xml:space="preserve">
    <value>Name can only contain letters and spaces.</value>
  </data>
  <data name="Payment.ExpirationValidation" xml:space="preserve">
    <value>Please enter a valid expiration date in MM/YYYY format.</value>
  </data>
  <data name="Payment.CVVValidation" xml:space="preserve">
    <value>CVV must be exactly 3 digits.</value>
  </data>
  <data name="Payment.ChooseTitle" xml:space="preserve">
    <value>Choose Your Payment Method</value>
  </data>
  <data name="Payment.ChooseDescription" xml:space="preserve">
    <value>Please select how you’d like to pay for your order.</value>
  </data>
  <data name="Payment.CardButton" xml:space="preserve">
    <value>Pay with Card</value>
  </data>
  <data name="Payment.CashButton" xml:space="preserve">
    <value>Pay with Cash</value>
  </data>
  <data name="Order.Edit.Title" xml:space="preserve">
    <value>Edit Your Order</value>
  </data>
  <data name="Order.ApplyChangesButton" xml:space="preserve">
    <value>Apply Changes</value>
  </data>
  <data name="Order.RemoveColumn" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Order.Finalized.Title" xml:space="preserve">
    <value>Finalized Orders</value>
  </data>
  <data name="Order.TotalPriceColumn" xml:space="preserve">
    <value>Total Price</value>
  </data>
  <data name="Order.ItemCountColumn" xml:space="preserve">
    <value>Number of Items</value>
  </data>
  <data name="Order.LocationColumn" xml:space="preserve">
    <value>Customer Location</value>
  </data>
  <data name="Order.DeliveryNameColumn" xml:space="preserve">
    <value>Delivery Name</value>
  </data>
  <data name="Order.FinalizedOnColumn" xml:space="preserve">
    <value>Finalized On</value>
  </data>
  <data name="Order.PaymentMethodColumn" xml:space="preserve">
    <value>Payment Method</value>
  </data>
  <data name="Order.ActionsColumn" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="Order.ViewButton" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Order.CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Product.PriceLabel" xml:space="preserve">
    <value>Price:</value>
  </data>
  <data name="Product.StockLabel" xml:space="preserve">
    <value>Stock:</value>
  </data>
  <data name="Product.DescriptionLabel" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="Product.BackButton" xml:space="preserve">
    <value>Back to Products</value>
  </data>
  <data name="Product.FilterLabel" xml:space="preserve">
    <value>Filter by Category:</value>
  </data>
  <data name="Product.AllFilter" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Product.FruitsFilter" xml:space="preserve">
    <value>Fruits</value>
  </data>
  <data name="Product.VegetablesFilter" xml:space="preserve">
    <value>Vegetables</value>
  </data>
  <data name="Product.NoProducts" xml:space="preserve">
    <value>No products found.</value>
  </data>
  <data name="Product.DetailsButton" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="newLayout.PopularItems" xml:space="preserve">
    <value>Popular Items</value>
  </data>
  <data name="newLayout.NewArrivals" xml:space="preserve">
    <value>New Arrivals</value>
  </data>
  <data name="Product.DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Product.EditButton" xml:space="preserve">
    <value>Edit</value>
  </data>
</root>